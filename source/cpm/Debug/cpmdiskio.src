; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -nopadbranch -debug
; -peephole -globalopt -localcse -const=ROM 
	FILE	"..\cpmdiskio.c"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
;    1	//----------------------------------------------------------------------------
;    2	// Copyright (c) 2019, by Christopher D. Farrar
;    3	//----------------------------------------------------------------------------
;    4	// I here grant permission to any and all to copy and use this software for
;    5	// any purpose as long as my copyright message is retained.
;    6	//----------------------------------------------------------------------------
;    7	#include <defines.h>
;    8	//----------------------------------------------------------------------------
;    9	#include "cpmdiskio.h"
;   10	#include "cpmregisters.h"
;   11	#include "disks.h"
;   12	//----------------------------------------------------------------------------
;   13	void cpmSelectDisk( void )
;   14	{
_cpmSelectDisk:
.DEFINE "_cpmSelectDisk"

.VALUE _cpmSelectDisk

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "cpmSelectDisk",14,"_cpmSelectDisk"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   15	    hlregister = (UINT24) selectDisk( (UINT8) ( ( deregister & 0x0001 ) != 0 ), (UINT8) bcregister );
.LINE 15

	LD	A,(_bcregister)
	LD	C,A
	LD	B,%0
	PUSH	BC
	LD	A,(_deregister)
	AND	A,%1
	UEXT	HL
	LD	L,A
	LD	BC,0
	OR	A,A
	SBC	HL,BC
	JR	Z,L__1
	LD	A,%1
	JR	L__2
L__1:
	XOR	A,A
L__2:
	LD	C,A
	LD	B,%0
	PUSH	BC
	CALL	_selectDisk
	POP	BC
	POP	BC
	LD	BC,HL
	CALL	__stoiu
	LD	(_hlregister),HL
;   16	}
.LINE 16

	LD	SP,IX
	POP	IX
	RET	


;**************************** _cpmSelectDisk ***************************
;Name                         Addr/Register   Size   Type
;_hlregister                         IMPORT      3   variable
;_deregister                         IMPORT      3   variable
;_bcregister                         IMPORT      3   variable
;_selectDisk                         IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "cpmSelectDisk",16,"_cpmSelectDisk"
;   17	//----------------------------------------------------------------------------
;   18	void cpmHomeHead( void )
;   19	{
_cpmHomeHead:
.DEFINE "_cpmHomeHead"

.VALUE _cpmHomeHead

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "cpmHomeHead",19,"_cpmHomeHead"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   20	    homeHead();
.LINE 20

	CALL	_homeHead
;   21	}
.LINE 21

	LD	SP,IX
	POP	IX
	RET	


;**************************** _cpmHomeHead ***************************
;Name                         Addr/Register   Size   Type
;_homeHead                           IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "cpmHomeHead",21,"_cpmHomeHead"
;   22	//----------------------------------------------------------------------------
;   23	void cpmSetTrack( void )
;   24	{
_cpmSetTrack:
.DEFINE "_cpmSetTrack"

.VALUE _cpmSetTrack

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "cpmSetTrack",24,"_cpmSetTrack"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   25	    setTrack( (UINT16) bcregister );
.LINE 25

	LD	BC,(_bcregister)
	PUSH	BC
	CALL	_setTrack
	POP	BC
;   26	}
.LINE 26

	LD	SP,IX
	POP	IX
	RET	


;**************************** _cpmSetTrack ***************************
;Name                         Addr/Register   Size   Type
;_bcregister                         IMPORT      3   variable
;_setTrack                           IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "cpmSetTrack",26,"_cpmSetTrack"
;   27	//----------------------------------------------------------------------------
;   28	void cpmSetSector( void )
;   29	{
_cpmSetSector:
.DEFINE "_cpmSetSector"

.VALUE _cpmSetSector

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "cpmSetSector",29,"_cpmSetSector"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   30	    setSector( (UINT16) bcregister );
.LINE 30

	LD	BC,(_bcregister)
	PUSH	BC
	CALL	_setSector
	POP	BC
;   31	}
.LINE 31

	LD	SP,IX
	POP	IX
	RET	


;**************************** _cpmSetSector ***************************
;Name                         Addr/Register   Size   Type
;_bcregister                         IMPORT      3   variable
;_setSector                          IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "cpmSetSector",31,"_cpmSetSector"
;   32	//----------------------------------------------------------------------------
;   33	void cpmSetDma( void )
;   34	{
_cpmSetDma:
.DEFINE "_cpmSetDma"

.VALUE _cpmSetDma

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "cpmSetDma",34,"_cpmSetDma"

.LINE 34

.DEFINE "dma"

.CLASS 65

.VALUE -3

.TYPE 14

.ENDEF

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;   35	    UINT24 dma = mbregister & 0xFF;
.LINE 35

	LD	A,(_mbregister)
	UEXT	HL
	LD	L,A
	LD	(IX+%FFFFFFFD),HL
;   36	    dma <<= 16;
.LINE 36

	PUSH	HL
	UEXT	HL
	PUSH	HL
	INC	SP
	POP	HL
	INC	SP
	INC	SP
	LD	(IX+%FFFFFFFD),HL
;   37	    dma += ( bcregister & 0xFFFF );
.LINE 37

	LD	BC,(_bcregister)
	CALL	__stoiu
	LD	BC,(IX+%FFFFFFFD)
	ADD	HL,BC
	LD	(IX+%FFFFFFFD),HL
;   38	    setDma( (unsigned char *) dma );
.LINE 38

	LD	BC,HL
	PUSH	BC
	CALL	_setDma
	POP	BC
;   39	}
.LINE 39

	LD	SP,IX
	POP	IX
	RET	


;**************************** _cpmSetDma ***************************
;Name                         Addr/Register   Size   Type
;_setDma                             IMPORT  -----   function
;_bcregister                         IMPORT      3   variable
;_mbregister                         IMPORT      1   variable
;dma                                   IX-3      3   variable


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "cpmSetDma",39,"_cpmSetDma"
;   40	//----------------------------------------------------------------------------
;   41	void cpmReadSector( void )
;   42	{
_cpmReadSector:
.DEFINE "_cpmReadSector"

.VALUE _cpmReadSector

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "cpmReadSector",42,"_cpmReadSector"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   43	    afregister = (UINT24) readSector() << 8;
.LINE 43

	CALL	_readSector
	UEXT	HL
	LD	L,A
	PUSH	HL
	UEXT	HL
	PUSH	HL
	INC	SP
	INC	SP
	POP	HL
	INC	SP
	LD	(_afregister),HL
;   44	}
.LINE 44

	LD	SP,IX
	POP	IX
	RET	


;**************************** _cpmReadSector ***************************
;Name                         Addr/Register   Size   Type
;_afregister                         IMPORT      3   variable
;_readSector                         IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "cpmReadSector",44,"_cpmReadSector"
;   45	//----------------------------------------------------------------------------
;   46	void cpmWriteSector( void )
;   47	{
_cpmWriteSector:
.DEFINE "_cpmWriteSector"

.VALUE _cpmWriteSector

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "cpmWriteSector",47,"_cpmWriteSector"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   48	    afregister = (UINT24) writeSector( (UINT8) bcregister ) << 8;
.LINE 48

	LD	A,(_bcregister)
	LD	C,A
	LD	B,%0
	PUSH	BC
	CALL	_writeSector
	POP	BC
	UEXT	HL
	LD	L,A
	PUSH	HL
	UEXT	HL
	PUSH	HL
	INC	SP
	INC	SP
	POP	HL
	INC	SP
	LD	(_afregister),HL
;   49	}
.LINE 49

	LD	SP,IX
	POP	IX
	RET	


;**************************** _cpmWriteSector ***************************
;Name                         Addr/Register   Size   Type
;_afregister                         IMPORT      3   variable
;_bcregister                         IMPORT      3   variable
;_writeSector                        IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "cpmWriteSector",49,"_cpmWriteSector"
;   50	//----------------------------------------------------------------------------
;   51	void cpmTranslateSector( void )
;   52	{
_cpmTranslateSector:
.DEFINE "_cpmTranslateSector"

.VALUE _cpmTranslateSector

.CLASS 2

.TYPE 65

.ENDEF

.BEGFUNC "cpmTranslateSector",52,"_cpmTranslateSector"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
;   53	    hlregister = (UINT24) translateSector( (UINT16) bcregister );
.LINE 53

	LD	BC,(_bcregister)
	PUSH	BC
	CALL	_translateSector
	POP	BC
	LD	BC,HL
	CALL	__stoiu
	LD	(_hlregister),HL
;   54	}
.LINE 54

	LD	SP,IX
	POP	IX
	RET	


;**************************** _cpmTranslateSector ***************************
;Name                         Addr/Register   Size   Type
;_hlregister                         IMPORT      3   variable
;_bcregister                         IMPORT      3   variable
;_translateSector                    IMPORT  -----   function


; Stack Frame Size: 6 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "cpmTranslateSector",54,"_cpmTranslateSector"
	XREF _translateSector:ROM
	XREF _writeSector:ROM
	XREF _readSector:ROM
	XREF _setDma:ROM
	XREF _setSector:ROM
	XREF _setTrack:ROM
	XREF _homeHead:ROM
	XREF _selectDisk:ROM
	XREF _hlregister:ROM
	XREF _deregister:ROM
	XREF _bcregister:ROM
	XREF _afregister:ROM
	XREF _mbregister:ROM
	XREF __stoiu:ROM
	XDEF _cpmTranslateSector
	XDEF _cpmWriteSector
	XDEF _cpmReadSector
	XDEF _cpmSetDma
	XDEF _cpmSetSector
	XDEF _cpmSetTrack
	XDEF _cpmHomeHead
	XDEF _cpmSelectDisk
	END
