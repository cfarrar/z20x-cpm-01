; Zilog eZ80 ANSI C Compiler Release 3.4
; -nomodsect -optspeed -noreduceopt -nopadbranch -debug
; -peephole -globalopt -localcse -const=ROM 
	FILE	"..\main.c"
	.assume ADL=1
.DEBUG "C"
	SEGMENT CODE
.BEGREC "NONAME0",4
.DEFINE "dr"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "ddr"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "alt1"
.VALUE 2
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "alt2"
.VALUE 3
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "NONAME0"
.BEGREC "NONAME1",10
.DEFINE "uartMode"
.VALUE 0
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "baudRate"
.VALUE 1
.CLASS 8
.TYPE 4
.ENDEF
.DEFINE "dataBits"
.VALUE 4
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "stopBits"
.VALUE 5
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "parity"
.VALUE 6
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "fifoTriggerLevel"
.VALUE 7
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "hwFlowControl"
.VALUE 8
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "swFlowControl"
.VALUE 9
.CLASS 8
.TYPE 12
.ENDEF
.ENDREC "NONAME1"
.BEGREC "NONAME2",9
.DEFINE "pBuffer"
.VALUE 0
.CLASS 8
.TYPE 44
.ENDEF
.DEFINE "next_in"
.VALUE 3
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "next_out"
.VALUE 5
.CLASS 8
.TYPE 13
.ENDEF
.DEFINE "size"
.VALUE 7
.CLASS 8
.TYPE 13
.ENDEF
.ENDREC "NONAME2"
.BEGREC "fmt_type",19
.DEFINE "status"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "flags"
.VALUE 1
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "size"
.VALUE 2
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "chr"
.VALUE 3
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "type"
.VALUE 4
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "field_width"
.VALUE 5
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "precision"
.VALUE 6
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "set_begin"
.VALUE 7
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "set_end"
.VALUE 10
.CLASS 8
.TYPE 34
.ENDEF
.DEFINE "pad_whole"
.VALUE 13
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_pre_fract"
.VALUE 14
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_post_fract"
.VALUE 15
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "pad_at"
.VALUE 16
.CLASS 8
.TYPE 34
.ENDEF
.ENDREC "fmt_type"
.BEGREC "flt_info",12
.DEFINE "flags"
.VALUE 0
.CLASS 8
.TYPE 12
.ENDEF
.DEFINE "exp"
.VALUE 1
.CLASS 8
.TYPE 2
.ENDEF
.DEFINE "digits"
.VALUE 2
.CLASS 8
.DIM 10
.TYPE 108
.ENDEF
.ENDREC "flt_info"
;    1	//------------------------------------------------------------------------
;    2	// Copyright (c) 2019, Christopher D. Farrar
;    3	//------------------------------------------------------------------------
;    4	// I here grant permission to any and all to copy and use this software for
;    5	// any purpose as long as my copyright message is retained.
;    6	//------------------------------------------------------------------------
;    7	#include <ez80.h>
;    8	#include <stdio.h>
;    9	//------------------------------------------------------------------------
;   10	#include "cpmload.h"
;   11	#include "sdcard.h"
;   12	//------------------------------------------------------------------------
;   13	int main()
;   14	{
_main:
.DEFINE "_main"

.VALUE _main

.CLASS 2

.TYPE 68

.ENDEF

.BEGFUNC "main",14,"_main"

	PUSH	IX
	LD	IX,0
	ADD	IX,SP
	PUSH	BC
;   15	    init_hw();
.LINE 15

	LD	(IX+%FFFFFFFD),HL
	CALL	_init_hw
	LD	HL,(IX+%FFFFFFFD)
;   16	
;   17	    /* Start CP/M */
;   18	    for ( ; ; )
L_0:
.LINE 18

;   19	    {
;   20	        startCpm();
.LINE 20

	CALL	_startCpm
;   21	    }
.LINE 21

	JR	L_0
;   22	
;   23	    return 0;
;   24	}
.LINE 24

	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_startCpm                           IMPORT  -----   function
;_init_hw                            IMPORT  -----   function


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


.ENDFUNC "main",24,"_main"
	XREF _init_hw:ROM
	XREF _startCpm:ROM
	XDEF _main
	END
